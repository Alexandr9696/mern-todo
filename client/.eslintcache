[{"C:\\Development\\MERN\\MERN Todo\\client\\src\\App.js":"1","C:\\Development\\MERN\\MERN Todo\\client\\src\\pages\\Home.js":"2","C:\\Development\\MERN\\MERN Todo\\client\\src\\reportWebVitals.js":"3","C:\\Development\\MERN\\MERN Todo\\client\\src\\index.js":"4","C:\\Development\\MERN\\MERN Todo\\client\\src\\components\\Navbar.js":"5","C:\\Development\\MERN\\MERN Todo\\client\\src\\pages\\Register.js":"6","C:\\Development\\MERN\\MERN Todo\\client\\src\\pages\\Login.js":"7","C:\\Development\\MERN\\MERN Todo\\client\\src\\hooks\\http.hook.js":"8","C:\\Development\\MERN\\MERN Todo\\client\\src\\hooks\\auth.hook.js":"9","C:\\Development\\MERN\\MERN Todo\\client\\src\\context\\AuthContext.js":"10","C:\\Development\\MERN\\MERN Todo\\client\\src\\pages\\NotePage.js":"11","C:\\Development\\MERN\\MERN Todo\\client\\src\\routes.js":"12","C:\\Development\\MERN\\MERN Todo\\client\\src\\components\\Loader.js":"13","C:\\Development\\MERN\\MERN Todo\\client\\src\\components\\NoteForm.js":"14","C:\\Development\\MERN\\MERN Todo\\client\\src\\components\\NoteList.js":"15","C:\\Development\\MERN\\MERN Todo\\client\\src\\hooks\\alert.hook.js":"16","C:\\Development\\MERN\\MERN Todo\\client\\src\\components\\Alert.js":"17"},{"size":784,"mtime":1606862004180,"results":"18","hashOfConfig":"19"},{"size":595,"mtime":1606859924077,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1606553772677,"results":"21","hashOfConfig":"19"},{"size":458,"mtime":1607262178541,"results":"22","hashOfConfig":"19"},{"size":1495,"mtime":1606863547462,"results":"23","hashOfConfig":"19"},{"size":3105,"mtime":1606863762290,"results":"24","hashOfConfig":"19"},{"size":2209,"mtime":1606863762159,"results":"25","hashOfConfig":"19"},{"size":1143,"mtime":1606769098301,"results":"26","hashOfConfig":"19"},{"size":1028,"mtime":1606854442509,"results":"27","hashOfConfig":"19"},{"size":199,"mtime":1606694992388,"results":"28","hashOfConfig":"19"},{"size":1985,"mtime":1607294547605,"results":"29","hashOfConfig":"19"},{"size":785,"mtime":1607035506934,"results":"30","hashOfConfig":"19"},{"size":269,"mtime":1606862076332,"results":"31","hashOfConfig":"19"},{"size":621,"mtime":1607261131220,"results":"32","hashOfConfig":"19"},{"size":1084,"mtime":1607281561198,"results":"33","hashOfConfig":"19"},{"size":404,"mtime":1607292982075,"results":"34","hashOfConfig":"19"},{"size":682,"mtime":1607294157945,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"c0tuyf",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"C:\\Development\\MERN\\MERN Todo\\client\\src\\App.js",[],["75","76"],"C:\\Development\\MERN\\MERN Todo\\client\\src\\pages\\Home.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\reportWebVitals.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\index.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\components\\Navbar.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\pages\\Register.js",["77","78","79"],"import React, {useContext, useState} from \"react\"\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const Register = () => {\r\n  const history = useHistory()\r\n  const {loading, error, request, clearError} = useHttp()\r\n\r\n  const auth = useContext(AuthContext)\r\n\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    repassword: ''\r\n  })\r\n\r\n  // обработка inputs\r\n  const changeHandler = event => {\r\n    setForm({...form, [event.target.name]: event.target.value} )\r\n  }\r\n\r\n\r\n  // регистрация\r\n  const registerHandler = async () => {\r\n    try {\r\n      const reg = await request('/auth/register', 'POST', {...form})\r\n      const data = await request('/auth/login', 'POST', {...form})\r\n      auth.login(data.token, data.userId)\r\n      history.push('/auth/login')\r\n    } catch (e) {}\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-6 offset-3\">\r\n        <h1 className='text-center mb-2'>Регистрация</h1>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Введите имя</label>\r\n            <input\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={form.name}\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Введите email</label>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              value={form.email}\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Введите пароль</label>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              value={form.password}\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"repassword\">Введите повторно пароль</label>\r\n            <input\r\n              id=\"repassword\"\r\n              name=\"repassword\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              value={form.repassword}\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n        </form>\r\n        { !loading ?\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={registerHandler}\r\n          >\r\n            Зарегистрироваться\r\n          </button>\r\n          :\r\n          <button className=\"btn btn-primary\" type=\"button\" disabled>\r\n            <span className=\"spinner-grow spinner-grow-sm mr-1\" role=\"status\" aria-hidden=\"true\" />\r\n            Регистрация\r\n          </button>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Development\\MERN\\MERN Todo\\client\\src\\pages\\Login.js",["80","81"],"import React, {useContext, useState} from \"react\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const Login = () => {\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n\r\n  const {loading, error, request, clearError} = useHttp()\r\n\r\n  const [form, setForm] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  // обработка inputs\r\n  const changeHandler = event => {\r\n    setForm({...form, [event.target.name]: event.target.value} )\r\n  }\r\n\r\n  // авторизация\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request('/auth/login', 'POST', {...form})\r\n      auth.login(data.token, data.userId)\r\n      history.push('/')\r\n    } catch (e) {\r\n      throw e\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-6 offset-3\">\r\n        <h1 className='text-center mb-2'>Авторизация</h1>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Введите email</label>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              value={form.email}\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Введите пароль</label>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              value={form.password}\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n        </form>\r\n        { !loading ?\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={loginHandler}\r\n          >\r\n            Войти\r\n          </button>\r\n          :\r\n          <button className=\"btn btn-primary\" type=\"button\" disabled>\r\n            <span className=\"spinner-grow spinner-grow-sm mr-2\" role=\"status\" aria-hidden=\"true\" />\r\n            Войти\r\n          </button>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Development\\MERN\\MERN Todo\\client\\src\\hooks\\http.hook.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\hooks\\auth.hook.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\context\\AuthContext.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\pages\\NotePage.js",["82"],"C:\\Development\\MERN\\MERN Todo\\client\\src\\routes.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\components\\Loader.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\components\\NoteForm.js",["83"],"import React from 'react'\r\n\r\nexport const NoteForm = ({addNote, formHandler, form}) => {\r\n\r\n  return (\r\n    <>\r\n        <div className=\"form-group\">\r\n          <h1 className='mb-2'>Добавьте заметку</h1>\r\n          <input type=\"text\"\r\n                 name=\"title\"\r\n                 className=\"form-control\"\r\n                 placeholder='Введите название заметки'\r\n                 value={form.title}\r\n                 onChange={formHandler}\r\n          />\r\n          <button className='btn btn-success mt-2' onClick={addNote}>Добавить</button>\r\n        </div>\r\n    </>\r\n  )\r\n}","C:\\Development\\MERN\\MERN Todo\\client\\src\\components\\NoteList.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\hooks\\alert.hook.js",[],"C:\\Development\\MERN\\MERN Todo\\client\\src\\components\\Alert.js",["84"],"import React from 'react'\r\nimport {CSSTransition} from 'react-transition-group'\r\n\r\nexport const Alert = ({alert, hide}) => {\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={alert.visible}\r\n      timeout={{\r\n        enter: 500,\r\n        exit: 350\r\n      }}\r\n      classNames={'alert'}\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <div className={`alert alert-${alert.type || 'warning'} alert-dismissible`}>\r\n        <strong>Внимание!</strong>\r\n        &nbsp;{alert.text}\r\n        <button onClick={hide} type=\"button\" className=\"close\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    </CSSTransition>\r\n  )\r\n}",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":8,"column":19,"nodeType":"91","messageId":"92","endLine":8,"endColumn":24},{"ruleId":"89","severity":1,"message":"93","line":8,"column":35,"nodeType":"91","messageId":"92","endLine":8,"endColumn":45},{"ruleId":"89","severity":1,"message":"94","line":28,"column":13,"nodeType":"91","messageId":"92","endLine":28,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":10,"column":19,"nodeType":"91","messageId":"92","endLine":10,"endColumn":24},{"ruleId":"89","severity":1,"message":"93","line":10,"column":35,"nodeType":"91","messageId":"92","endLine":10,"endColumn":45},{"ruleId":"89","severity":1,"message":"95","line":13,"column":23,"nodeType":"91","messageId":"92","endLine":13,"endColumn":27},{"ruleId":"89","severity":1,"message":"96","line":18,"column":13,"nodeType":"91","messageId":"92","endLine":18,"endColumn":17},{"ruleId":"89","severity":1,"message":"97","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'clearError' is assigned a value but never used.","'reg' is assigned a value but never used.","'show' is assigned a value but never used.","'data' is assigned a value but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation"]